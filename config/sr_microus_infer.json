{
    "name": "test_sr_microus_7cases_step200",
    "phase": "val", // train or val
    "gpu_ids": [
        7
    ],
    "path": { //set the path
        "log": "logs",
        "tb_logger": "tb_logger",
        "results": "results",
        "checkpoint": "checkpoint",
        // "resume_state": null
        // "resume_state": "experiments/train_sr_microus_7cases_240917_231820/checkpoint/I110000_E15" //pretrain model or training state
        "resume_state": "experiments/train_sr_microus_7cases_step200_241106_102543/checkpoint/I110000_E15"
    },
    // "datasets": {
    //     "train": {
    //         "name": "FFHQ",
    //         "mode": "HR", // whether need LR img
    //         "dataroot": "dataset/ffhq_16_128",
    //         "datatype": "lmdb", //lmdb or img, path of img files
    //         "l_resolution": 16, // low resolution need to super_resolution
    //         "r_resolution": 128, // high resolution
    //         "batch_size": 4,
    //         "num_workers": 8,
    //         "use_shuffle": true,
    //         "data_len": -1 // -1 represents all data used in train
    //     },
    //     "val": {
    //         "name": "CelebaHQ",
    //         "mode": "LRHR",
    //         "dataroot": "dataset/celebahq_16_128",
    //         "datatype": "lmdb", //lmdb or img, path of img files
    //         "l_resolution": 16,
    //         "r_resolution": 128,
    //         "data_len": 50 // data length in validation 
    //     }
    // },
    "model": {
        "which_model_G": "sr3", // use the ddpm or sr3 network structure
        "finetune_norm": false,
        "unet": {
            "in_channel": 3,
            "out_channel": 1,
            "inner_channel": 64,
            "norm_groups": 16,
            "channel_multiplier": [
                1,
                2,
                4,
                8,
                16
            ],
            "attn_res": [
                // 32
            ],
            "res_blocks": 1,
            "dropout": 0
        },
        "beta_schedule": { // use munual beta_schedule for acceleration
            "train": {
                "schedule": "linear",
                "n_timestep": 200,
                "linear_start": 1e-6,
                "linear_end": 1e-2
            },
            "val": {
                "schedule": "linear",
                "n_timestep": 200,
                "linear_start": 1e-6,
                "linear_end": 1e-2
            }
        },
        "diffusion": {
            "image_size": 256,
            "channels": 1, //sample channel
            "conditional": true // unconditional generation or unconditional generation(super_resolution)
        }
    },
    "train": {
        "n_iter": 1000000,
        "val_freq": 1e4,
        "save_checkpoint_freq": 1e4,
        "print_freq": 200,
        "optimizer": {
            "type": "adam",
            "lr": 5e-6
        },
        "ema_scheduler": { // not used now
            "step_start_ema": 5000,
            "update_ema_every": 1,
            "ema_decay": 0.9999
        }
    },
    "wandb": {
        "project": "sr_ffhq"
    }
}